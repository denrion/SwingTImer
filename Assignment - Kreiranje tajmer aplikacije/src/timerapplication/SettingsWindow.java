/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timerapplication;

import javax.swing.*;
import java.awt.*;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.Date;

/**
 *
 * @author Denrion
 */
public class SettingsWindow extends javax.swing.JFrame {

    /**
     * Creates new form SettingsWindow
     */
    private SecondWindow sw;
    private BackgroundChangeTimer bct;
    private Color chosenColor;
    private LocalTime chosenTime;
    private int countdownValue;
    private int interval;

    private void disableControls() {
        cbOnTime.setEnabled(false);
        cbCountdown.setEnabled(false);
        spinOnTime.setEnabled(false);
        spinCountdown.setEnabled(false);
        chooseButton.setEnabled(false);
        speedSlider.setEnabled(false);
        startButton.setEnabled(false);
    }

    private void enableControls() {
        cbOnTime.setEnabled(true);
        cbCountdown.setEnabled(true);
        spinOnTime.setEnabled(true);
        spinCountdown.setEnabled(true);
        chooseButton.setEnabled(true);
        speedSlider.setEnabled(true);
        startButton.setEnabled(true);
    }

    public SettingsWindow() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        cbOnTime = new javax.swing.JCheckBox();
        cbCountdown = new javax.swing.JCheckBox();
        spinOnTime = new javax.swing.JSpinner();
        spinCountdown = new javax.swing.JSpinner();
        chooseButton = new javax.swing.JButton();
        lblSpeed = new javax.swing.JLabel();
        speedSlider = new javax.swing.JSlider();
        stopButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        lblChooseColor = new javax.swing.JLabel();

        buttonGroup1.add(cbOnTime);
        cbOnTime.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbOnTime.setText("on time:");
        cbOnTime.setActionCommand("on time");

        buttonGroup1.add(cbCountdown);
        cbCountdown.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbCountdown.setSelected(true);
        cbCountdown.setText("countdown (mins):");
        cbCountdown.setActionCommand("countdown");

        spinOnTime.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.MINUTE));
        spinOnTime.setEditor(new javax.swing.JSpinner.DateEditor(spinOnTime, "HH:mm:ss"));
        spinOnTime.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinOnTimeStateChanged(evt);
            }
        });

        spinCountdown.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinCountdown.setEditor(new javax.swing.JSpinner.NumberEditor(spinCountdown, ""));
        spinCountdown.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinCountdownStateChanged(evt);
            }
        });

        chooseButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chooseButton.setText("Choose color");
        chooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseButtonActionPerformed(evt);
            }
        });

        lblSpeed.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSpeed.setText("Speed:");

        speedSlider.setMajorTickSpacing(1000);
        speedSlider.setMaximum(3000);
        speedSlider.setMinorTickSpacing(500);
        speedSlider.setPaintLabels(true);
        speedSlider.setPaintTicks(true);
        speedSlider.setValue(100);
        speedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                speedSliderStateChanged(evt);
            }
        });

        stopButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        startButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        startButton.setText("Start");
        startButton.setToolTipText("");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        lblChooseColor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblChooseColor.setText("no color selected");
        lblChooseColor.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(speedSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(stopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbOnTime)
                            .addComponent(cbCountdown)
                            .addComponent(lblSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chooseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinCountdown, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinOnTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblChooseColor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbOnTime)
                    .addComponent(spinOnTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCountdown)
                    .addComponent(spinCountdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseButton)
                    .addComponent(lblChooseColor))
                .addGap(18, 18, 18)
                .addComponent(lblSpeed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(speedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopButton)
                    .addComponent(startButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseButtonActionPerformed
        JColorChooser jcc = new JColorChooser();
        Color choice;
        choice = JColorChooser.showDialog(getContentPane(), "Choose color", Color.yellow);
        if (choice != null) {
            chosenColor = choice;
            lblChooseColor.setBackground(chosenColor);
            lblChooseColor.setText(" ");
        }
    }//GEN-LAST:event_chooseButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        disableControls();
        String command = buttonGroup1.getSelection().getActionCommand();
        sw = new SecondWindow();
        switch (command) {
            case "on time":
                if (chosenTime != null && chosenTime.compareTo(LocalTime.now()) < 0) {
                    JOptionPane.showMessageDialog(this.getContentPane(), "Chosen time has already passed. Please choose time in the future.", "Time eror", JOptionPane.ERROR_MESSAGE);
                    enableControls();
                    return;
                }
                long onTimeDelay = ChronoUnit.MILLIS.between(LocalTime.now(), chosenTime);
                bct = new BackgroundChangeTimer();
                bct.startTimer(sw, interval, onTimeDelay, chosenColor);
                break;
            case "countdown":
                LocalTime chosenTimeCountdown = LocalTime.now().plusMinutes(countdownValue);
                if (chosenTimeCountdown.compareTo(LocalTime.now()) < 0) {
                    JOptionPane.showMessageDialog(this.getContentPane(), "Chosen time has already passed. Please choose time in the future.", "Time eror", JOptionPane.ERROR_MESSAGE);
                    enableControls();
                    return;
                }
                long coountdownDelay = ChronoUnit.MILLIS.between(LocalTime.now(), chosenTimeCountdown);
                bct = new BackgroundChangeTimer();
                bct.startTimer(sw, interval, coountdownDelay, chosenColor);
                break;
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        bct.stopTimer(bct.getT(), bct.getT1());
        sw.dispose();
        enableControls();
    }//GEN-LAST:event_stopButtonActionPerformed

    private void spinOnTimeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinOnTimeStateChanged
        JSpinner js = (JSpinner) evt.getSource();
        Date onTimeDateValue = (Date) js.getValue();
        chosenTime = LocalDateTime.ofInstant(onTimeDateValue.toInstant(), ZoneId.systemDefault()).toLocalTime();
    }//GEN-LAST:event_spinOnTimeStateChanged

    private void spinCountdownStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinCountdownStateChanged
        JSpinner js = (JSpinner) evt.getSource();
        countdownValue = (int) js.getValue();
    }//GEN-LAST:event_spinCountdownStateChanged

    private void speedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_speedSliderStateChanged
        JSlider jsl = (JSlider) evt.getSource();
        if (jsl.getValueIsAdjusting()) {
            return;
        }
        interval = jsl.getValue();
    }//GEN-LAST:event_speedSliderStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SettingsWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbCountdown;
    private javax.swing.JCheckBox cbOnTime;
    private javax.swing.JButton chooseButton;
    private javax.swing.JLabel lblChooseColor;
    private javax.swing.JLabel lblSpeed;
    private javax.swing.JSlider speedSlider;
    private javax.swing.JSpinner spinCountdown;
    public javax.swing.JSpinner spinOnTime;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
